/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2021-06-24 17:52:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.components;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import models.usuario.Usuario;

public final class formUsuario_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("models.usuario.Usuario");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Usuario novoUsuario = (Usuario)request.getAttribute("usuario");

      out.write("\n");
      out.write("<!-- FORM VENDEDOR -->\n");
      out.write("<div class=\"rounded border border-dark p-4 m-5\">\n");
      out.write("    <form method=\"POST\" action=\"UsuarioController\">                   \n");
      out.write("        <!-- ID (hidden) -->\n");
      out.write("        <input type=\"hidden\" class=\"form-control\" name=\"id\" id=\"id_novo_usuario\" value=\"");
      out.print( novoUsuario.getId() );
      out.write("\">\n");
      out.write("        <!-- NOME -->\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label for=\"nome\"><b>Nome</b></label>\n");
      out.write("            <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"nome\" autocomplete=\"off\" value=\"");
      out.print( novoUsuario.getNome() );
      out.write("\" placeholder=\"Digite o Nome do Usuario\" required>\n");
      out.write("        </div>\n");
      out.write("        <!-- CPF -->\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label for=\"cpf\"><b>CPF</b></label>\n");
      out.write("            <input type=\"text\" class=\"form-control cpf\" name=\"cpf\" id=\"cpf\" autocomplete=\"off\" value=\"");
      out.print( novoUsuario.getCpf() );
      out.write("\" placeholder=\"Digite o CPF do Usuario\" required>\n");
      out.write("        </div>\n");
      out.write("        <!-- SENHA -->\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label for=\"senha\"><b>Senha</b></label>\n");
      out.write("            <input type=\"password\" class=\"form-control\" name=\"senha\" id=\"senha\" autocomplete=\"off\" value=\"");
      out.print( novoUsuario.getSenha() );
      out.write("\" placeholder=\"Digite a Senha do Usuario\" required>\n");
      out.write("        </div>\n");
      out.write("        <!-- TIPO USUÁRIO -->\n");
      out.write("        <div class=\"form-group\">\n");
      out.write("            <label for=\"tipo_usuario\"><b>Tipo Usuário</b></label>\n");
      out.write("            <select class=\"form-control\" id=\"tipo_usuario\"  name=\"tipo_usuario\" required>\n");
      out.write("                <option value=\"0\" ");
      out.print( novoUsuario.getTipo().equals("0") ? "selected" : "" );
      out.write(">Administrador</option>                 \n");
      out.write("                <option value=\"1\" ");
      out.print( novoUsuario.getTipo().equals("1") ? "selected" : "" );
      out.write(">Vendedor</option>\n");
      out.write("                <option value=\"2\" ");
      out.print( novoUsuario.getTipo().equals("2") ? "selected" : "" );
      out.write(">Comprador</option>\n");
      out.write("            </select>\n");
      out.write("        </div>\n");
      out.write("        <!-- BOTÃO -->\n");
      out.write("        <button type=\"submit\" class=\"btn btn-dark\"><i class=\"fas fa-save\"></i> Salvar</button>\n");
      out.write("    </form>\n");
      out.write("</div>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
